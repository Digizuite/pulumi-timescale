// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timescale

import (
	"context"
	"reflect"

	"github.com/digizuite/pulumi-timescale/sdk/go/timescale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Service data source
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceResult
	err := ctx.Invoke("timescale:index/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type LookupServiceArgs struct {
	// Service ID is the unique identifier for this service
	Id string `pulumi:"id"`
	// VPC ID this service is linked to.
	VpcId *int `pulumi:"vpcId"`
}

// A collection of values returned by getService.
type LookupServiceResult struct {
	// Created is the time this service was created.
	Created string `pulumi:"created"`
	// Service ID is the unique identifier for this service
	Id string `pulumi:"id"`
	// Service Name is the configurable name assigned to this resource. If none is provided, a default will be generated by the provider.
	Name string `pulumi:"name"`
	// Region Code is the physical data center where this service is located.
	RegionCode string               `pulumi:"regionCode"`
	Resources  []GetServiceResource `pulumi:"resources"`
	Spec       GetServiceSpec       `pulumi:"spec"`
	// VPC ID this service is linked to.
	VpcId int `pulumi:"vpcId"`
}

func LookupServiceOutput(ctx *pulumi.Context, args LookupServiceOutputArgs, opts ...pulumi.InvokeOption) LookupServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceResult, error) {
			args := v.(LookupServiceArgs)
			r, err := LookupService(ctx, &args, opts...)
			var s LookupServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceResultOutput)
}

// A collection of arguments for invoking getService.
type LookupServiceOutputArgs struct {
	// Service ID is the unique identifier for this service
	Id pulumi.StringInput `pulumi:"id"`
	// VPC ID this service is linked to.
	VpcId pulumi.IntPtrInput `pulumi:"vpcId"`
}

func (LookupServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceArgs)(nil)).Elem()
}

// A collection of values returned by getService.
type LookupServiceResultOutput struct{ *pulumi.OutputState }

func (LookupServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceResult)(nil)).Elem()
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutput() LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutputWithContext(ctx context.Context) LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupServiceResult] {
	return pulumix.Output[LookupServiceResult]{
		OutputState: o.OutputState,
	}
}

// Created is the time this service was created.
func (o LookupServiceResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Created }).(pulumi.StringOutput)
}

// Service ID is the unique identifier for this service
func (o LookupServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Service Name is the configurable name assigned to this resource. If none is provided, a default will be generated by the provider.
func (o LookupServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// Region Code is the physical data center where this service is located.
func (o LookupServiceResultOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.RegionCode }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) Resources() GetServiceResourceArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []GetServiceResource { return v.Resources }).(GetServiceResourceArrayOutput)
}

func (o LookupServiceResultOutput) Spec() GetServiceSpecOutput {
	return o.ApplyT(func(v LookupServiceResult) GetServiceSpec { return v.Spec }).(GetServiceSpecOutput)
}

// VPC ID this service is linked to.
func (o LookupServiceResultOutput) VpcId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceResult) int { return v.VpcId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceResultOutput{})
}
